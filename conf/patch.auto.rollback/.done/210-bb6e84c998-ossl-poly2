commit bb6e84c988d3f54eff602ed544ceaa9b9fe3e9ff
Author: John Baldwin <jhb@FreeBSD.org>
Date:   2021-03-05 17:47:58 +0000

    poly1305: Don't export generic Poly1305_* symbols from xform_poly1305.c.
    
    There currently isn't a need to provide a public interface to a
    software Poly1305 implementation beyond what is already available via
    libsodium's APIs and these symbols conflict with symbols shared within
    the ossl.ko module between ossl_poly1305.c and ossl_chacha20.c.
    
    Reported by:    se, kp
    Fixes:          78991a93eb9d
    Sponsored by:   Netflix

diff --git a/sys/opencrypto/xform_poly1305.c b/sys/opencrypto/xform_poly1305.c
index bddbb572d68..d8ceab47dec 100644
--- a/sys/opencrypto/xform_poly1305.c
+++ b/sys/opencrypto/xform_poly1305.c
@@ -4,7 +4,6 @@
 __FBSDID("$FreeBSD$");
 
 #include <opencrypto/xform_auth.h>
-#include <opencrypto/xform_poly1305.h>
 
 #include <sodium/crypto_onetimeauth_poly1305.h>
 
@@ -16,16 +15,16 @@ CTASSERT(sizeof(union authctx) >= sizeof(struct poly1305_xform_ctx));
 CTASSERT(POLY1305_KEY_LEN == crypto_onetimeauth_poly1305_KEYBYTES);
 CTASSERT(POLY1305_HASH_LEN == crypto_onetimeauth_poly1305_BYTES);
 
-void
-Poly1305_Init(void *polyctx)
+static void
+xform_Poly1305_Init(void *polyctx)
 {
 	/* Nop */
 }
 
-void
-Poly1305_Setkey(struct poly1305_xform_ctx *polyctx,
-    const uint8_t key[__min_size(POLY1305_KEY_LEN)], size_t klen)
+static void
+xform_Poly1305_Setkey(void *ctx, const uint8_t *key, u_int klen)
 {
+	struct poly1305_xform_ctx *polyctx = ctx;
 	int rc;
 
 	if (klen != POLY1305_KEY_LEN)
@@ -36,16 +35,10 @@ Poly1305_Setkey(struct poly1305_xform_ctx *polyctx,
 		panic("%s: Invariant violated: %d", __func__, rc);
 }
 
-static void
-xform_Poly1305_Setkey(void *ctx, const uint8_t *key, u_int klen)
-{
-	Poly1305_Setkey(ctx, key, klen);
-}
-
-int
-Poly1305_Update(struct poly1305_xform_ctx *polyctx, const void *data,
-    size_t len)
+static int
+xform_Poly1305_Update(void *ctx, const void *data, u_int len)
 {
+	struct poly1305_xform_ctx *polyctx = ctx;
 	int rc;
 
 	rc = crypto_onetimeauth_poly1305_update(&polyctx->state, data, len);
@@ -54,16 +47,10 @@ Poly1305_Update(struct poly1305_xform_ctx *polyctx, const void *data,
 	return (0);
 }
 
-static int
-xform_Poly1305_Update(void *ctx, const void *data, u_int len)
-{
-	return (Poly1305_Update(ctx, data, len));
-}
-
-void
-Poly1305_Final(uint8_t digest[__min_size(POLY1305_HASH_LEN)],
-    struct poly1305_xform_ctx *polyctx)
+static void
+xform_Poly1305_Final(uint8_t *digest, void *ctx)
 {
+	struct poly1305_xform_ctx *polyctx = ctx;
 	int rc;
 
 	rc = crypto_onetimeauth_poly1305_final(&polyctx->state, digest);
@@ -71,12 +58,6 @@ Poly1305_Final(uint8_t digest[__min_size(POLY1305_HASH_LEN)],
 		panic("%s: Invariant violated: %d", __func__, rc);
 }
 
-static void
-xform_Poly1305_Final(uint8_t *digest, void *ctx)
-{
-	Poly1305_Final(digest, ctx);
-}
-
 struct auth_hash auth_hash_poly1305 = {
 	.type = CRYPTO_POLY1305,
 	.name = "Poly-1305",
@@ -84,7 +65,7 @@ struct auth_hash auth_hash_poly1305 = {
 	.hashsize = POLY1305_HASH_LEN,
 	.ctxsize = sizeof(struct poly1305_xform_ctx),
 	.blocksize = crypto_onetimeauth_poly1305_BYTES,
-	.Init = Poly1305_Init,
+	.Init = xform_Poly1305_Init,
 	.Setkey = xform_Poly1305_Setkey,
 	.Update = xform_Poly1305_Update,
 	.Final = xform_Poly1305_Final,
diff --git a/sys/opencrypto/xform_poly1305.h b/sys/opencrypto/xform_poly1305.h
deleted file mode 100644
index cca1c6af939..00000000000
--- a/sys/opencrypto/xform_poly1305.h
+++ /dev/null
@@ -1,16 +0,0 @@
-/* This file is in the public domain. */
-/* $FreeBSD$ */
-#pragma once
-
-#include <sys/types.h>
-
-struct poly1305_xform_ctx;
-
-void Poly1305_Init(void *);
-
-void Poly1305_Setkey(struct poly1305_xform_ctx *,
-    const uint8_t [__min_size(32)], size_t);
-
-int Poly1305_Update(struct poly1305_xform_ctx *, const void *, size_t);
-
-void Poly1305_Final(uint8_t [__min_size(16)], struct poly1305_xform_ctx *);
