commit 0a0d6ce34d6be89cb356c7815648e455fabe3151
Author: Andrew Turner <andrew@FreeBSD.org>
Date:   2021-05-12 07:45:09 +0000

    Use the arm virtual counter in the arm64 loader
    
    It exist on all ARMv8+ CPUs, and other boot loaders rely on it being
    present.
    
    Sponsored by:   Innovate UK
    Differential Revision: https://reviews.freebsd.org/D30410

diff --git a/stand/efi/libefi/Makefile b/stand/efi/libefi/Makefile
index 99b31338a75..8f1a30d8690 100644
--- a/stand/efi/libefi/Makefile
+++ b/stand/efi/libefi/Makefile
@@ -27,9 +27,10 @@ SRCS+=  teken.c
 
 .if ${MACHINE_CPUARCH} == "amd64" || ${MACHINE_CPUARCH} == "i386"
 SRCS+=	time.c
-.elif ${MACHINE_CPUARCH} == "aarch64" || ${MACHINE_CPUARCH} == "arm" || \
-    ${MACHINE_CPUARCH} == "riscv"
+.elif ${MACHINE_CPUARCH} == "arm" || ${MACHINE_CPUARCH} == "riscv"
 SRCS+=	time_event.c
+.elif ${MACHINE_CPUARCH} == "aarch64"
+SRCS+=	time_arm64.c
 .endif
 
 # We implement a slightly non-standard %S in that it always takes a
diff --git a/stand/efi/libefi/time_arm64.c b/stand/efi/libefi/time_arm64.c
new file mode 100644
index 00000000000..baa0f8bfa1e
--- /dev/null
+++ b/stand/efi/libefi/time_arm64.c
@@ -0,0 +1,72 @@
+/*-
+ * SPDX-License-Identifier: BSD-2-Clause
+ *
+ * Copyright (c) 2021 Andrew Turner
+ *
+ * This work was supported by Innovate UK project 105694, "Digital Security
+ * by Design (DSbD) Technology Platform Prototype".
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <sys/cdefs.h>
+__FBSDID("$FreeBSD$");
+
+#include <efi.h>
+#include <efilib.h>
+
+#include <time.h>
+#include <sys/time.h>
+
+#include <machine/armreg.h>
+
+static uint64_t timer_freq;
+
+void
+efi_time_init(void)
+{
+	/* Find the timer frequency */
+	timer_freq = READ_SPECIALREG(cntfrq_el0);
+}
+
+void
+efi_time_fini(void)
+{
+}
+
+time_t
+time(time_t *tloc)
+{
+	time_t t;
+
+	t = READ_SPECIALREG(cntvct_el0) / timer_freq;
+	if (tloc != NULL)
+		*tloc = t;
+
+	return (t);
+}
+
+time_t
+getsecs(void)
+{
+    return time(NULL);
+}
