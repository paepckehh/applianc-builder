#!/bin/sh
if [ ! $BSD_CONF_VERSION ]; then . /etc/.bsdconf; fi
if [ -z $GOO ]; then GOO=/usr/local/goo; fi
PRIMARY=$BSD_PKG/all/goo.uzst
FALLBACK=$BSD_PKG/.store/all/.goo-stable
SQUASH=$BSD_PKG/all/goo.sqfs
goo_mount() {
	/usr/bin/mdconfig -d -u $BSD_MD_GOV -o force > /dev/null 2>&1
	/usr/bin/mdconfig -u $BSD_MD_GOV -f $TIMG > /dev/null 2>&1
	/usr/bin/mount -o ro /dev/$BSD_MD_GOV.uzip $GOO > /dev/null 2>&1
}
goo() {
	if [ ! -x $GOO/.goo ]; then
		umount -f $GOO > /dev/null 2>&1
		mkdir -p $GOO $GOTMPDIR
		if [ -e $PRIMARY ]; then
			TIMG=$PRIMARY && goo_mount
			if [ ! -x $GOO/.goo ]; then
				echo "[GOO] [error] [primary image faild] [$PRIMARY]"
				if [ -e $FALLBACK ]; then
					TIMG=$FALLBACK && goo_mount
					if [ ! -x $GOO/.goo ]; then echo "[GOO] [error] [primary and fallback img faild]" && exit; fi
					echo "[GOO] [fallback img activated] [$TIMG]"
				fi
			fi
		elif [ -e $FALLBACK ]; then
			echo "[GOO] [error] [primary image faild] [$PRIMARY]"
			TIMG=$FALLBACK && goo_mount
			if [ ! -x $GOO/.goo ]; then echo "[GOO] [error] [primary and fallback img faild] [x]" && exit; fi
			echo "[GOO] [fallback img activated] [$TIMG]"
		elif [ -e $SQUASH ]; then
			TIMG=$SQUASH && /usr/bin/squashfuse $TIMG $GOO
		else
			echo "[GOO] [error] [no valid img found in store]" && exit
		fi
		echo "[GOO] [done] [$GOO] [$TIMG]"
	fi
}
goo
exit
#########################################################################
